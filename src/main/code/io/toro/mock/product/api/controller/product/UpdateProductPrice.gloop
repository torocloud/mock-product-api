{
    "input": [
        {
            "name": "productCode"
        },
        {
            "name": "price",
            "type": "bigDecimal"
        }
    ],
    "output": [
        {
            "name": "response",
            "type": "model",
            "reference": "io.toro.mock.product.model.Response"
        },
        {
            "name": "responseCode",
            "type": "integer"
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "name": "io.toro.mock.product.api.controller.product.GetProduct",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "getProductResponse",
                                    "type": "model",
                                    "gloopProperties": [
                                        {
                                            "name": "response",
                                            "type": "model",
                                            "reference": "io.toro.mock.product.model.Response"
                                        },
                                        {
                                            "name": "responseCode",
                                            "type": "integer"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "inputs": [
                        {
                            "from": [
                                "productCode"
                            ],
                            "to": [
                                "productCode"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "response"
                            ],
                            "to": [
                                "getProductResponse",
                                "response"
                            ]
                        },
                        {
                            "from": [
                                "responseCode"
                            ],
                            "to": [
                                "getProductResponse",
                                "responseCode"
                            ]
                        },
                        {
                            "from": [
                                "APIException"
                            ],
                            "to": [
                                "APIException"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "getProductResponse.responseCode",
                    "children": [
                        {
                            "type": "block",
                            "label": "200",
                            "children": [
                                {
                                    "type": "fork",
                                    "expression": "price < 0",
                                    "children": [
                                        {
                                            "type": "invokeCode",
                                            "label": "true",
                                            "className": "io.toro.martini.LoggerMethods",
                                            "methodName": "error",
                                            "parameters": [
                                                "java.lang.String"
                                            ],
                                            "inputs": [
                                                {
                                                    "type": "set",
                                                    "expression": "Product price cannot be lower than 0",
                                                    "to": [
                                                        "message"
                                                    ]
                                                }
                                            ],
                                            "outputs": [
                                                {
                                                    "type": "set",
                                                    "expression": "400",
                                                    "to": [
                                                        "responseCode"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "ERROR",
                                                    "to": [
                                                        "response",
                                                        "result"
                                                    ]
                                                },
                                                {
                                                    "from": [
                                                        "output"
                                                    ],
                                                    "to": [
                                                        "APIException",
                                                        "message"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "400",
                                                    "to": [
                                                        "APIException",
                                                        "httpErrorCode"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "ERROR",
                                                    "to": [
                                                        "APIException",
                                                        "result"
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "invokeGloop",
                                            "label": "false",
                                            "name": "io.toro.mock.product.sql.product.UpdateProductPrice",
                                            "inputs": [
                                                {
                                                    "from": [
                                                        "productCode"
                                                    ],
                                                    "to": [
                                                        "updateProductPriceInput",
                                                        "productCode"
                                                    ]
                                                },
                                                {
                                                    "from": [
                                                        "price"
                                                    ],
                                                    "to": [
                                                        "updateProductPriceInput",
                                                        "msrp"
                                                    ]
                                                }
                                            ],
                                            "outputs": [
                                                {
                                                    "type": "set",
                                                    "expression": "200",
                                                    "to": [
                                                        "responseCode"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "\"Successfully updated price of product with product code: ${productCode} with value ${price}.\"",
                                                    "evaluate": true,
                                                    "to": [
                                                        "response",
                                                        "message"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "SUCCESS",
                                                    "to": [
                                                        "response",
                                                        "result"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "Log the exception in the console, and then map the appropriate response message and code",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}