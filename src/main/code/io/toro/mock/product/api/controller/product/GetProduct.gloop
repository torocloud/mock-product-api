{
    "input": [
        {
            "name": "productCode"
        }
    ],
    "output": [
        {
            "name": "response",
            "type": "model",
            "reference": "io.toro.mock.product.model.Response",
            "gloopProperties": [
                {
                    "name": "product",
                    "type": "model",
                    "reference": "io.toro.mock.product.model.product.Product"
                }
            ]
        },
        {
            "name": "responseCode",
            "type": "integer"
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "name": "io.toro.mock.product.sql.product.SelectProduct",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "customField"
                                }
                            ]
                        }
                    ],
                    "inputs": [
                        {
                            "from": [
                                "productCode"
                            ],
                            "to": [
                                "selectProductInput",
                                "productCode"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "selectProductOutput",
                                "CUSTOM_FIELD"
                            ],
                            "to": [
                                "customField"
                            ]
                        },
                        {
                            "from": [
                                "selectProductOutput",
                                "PRODUCT_CODE"
                            ],
                            "to": [
                                "response",
                                "product",
                                "productCode"
                            ]
                        },
                        {
                            "from": [
                                "selectProductOutput",
                                "PRODUCT_NAME"
                            ],
                            "to": [
                                "response",
                                "product",
                                "productName"
                            ]
                        },
                        {
                            "from": [
                                "selectProductOutput",
                                "PRODUCT_LINE"
                            ],
                            "to": [
                                "response",
                                "product",
                                "productLine"
                            ]
                        },
                        {
                            "from": [
                                "selectProductOutput",
                                "PRODUCT_SCALE"
                            ],
                            "to": [
                                "response",
                                "product",
                                "productScale"
                            ]
                        },
                        {
                            "from": [
                                "selectProductOutput",
                                "PRODUCT_VENDOR"
                            ],
                            "to": [
                                "response",
                                "product",
                                "productVendor"
                            ]
                        },
                        {
                            "from": [
                                "selectProductOutput",
                                "PRODUCT_DESCRIPTION"
                            ],
                            "to": [
                                "response",
                                "product",
                                "productDescription"
                            ]
                        },
                        {
                            "from": [
                                "selectProductOutput",
                                "QUANTITY_IN_STOCK"
                            ],
                            "to": [
                                "response",
                                "product",
                                "quantityInStock"
                            ]
                        },
                        {
                            "from": [
                                "selectProductOutput",
                                "BUY_PRICE"
                            ],
                            "to": [
                                "response",
                                "product",
                                "buyPrice"
                            ]
                        },
                        {
                            "from": [
                                "selectProductOutput",
                                "MSRP"
                            ],
                            "to": [
                                "response",
                                "product",
                                "msrp"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "SUCCESS",
                            "to": [
                                "response",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "\"Successfully fetched product with code: ${productCode}\"",
                            "evaluate": true,
                            "to": [
                                "response",
                                "message"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "response?.product?.productCode",
                    "children": [
                        {
                            "type": "invokeCode",
                            "label": "$null",
                            "comments": "If none found, log an error message, and set the appropriate response payload and code (404)",
                            "className": "io.toro.martini.LoggerMethods",
                            "methodName": "error",
                            "parameters": [
                                "java.lang.String"
                            ],
                            "inputs": [
                                {
                                    "type": "set",
                                    "expression": "\"No product with code ${productCode} found.\"",
                                    "evaluate": true,
                                    "to": [
                                        "message"
                                    ]
                                }
                            ],
                            "outputs": [
                                {
                                    "type": "set",
                                    "expression": "404",
                                    "to": [
                                        "responseCode"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "ERROR",
                                    "to": [
                                        "APIException",
                                        "result"
                                    ]
                                },
                                {
                                    "from": [
                                        "output"
                                    ],
                                    "to": [
                                        "APIException",
                                        "message"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "404",
                                    "to": [
                                        "APIException",
                                        "httpErrorCode"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "fork",
                            "label": "$else",
                            "expression": "customField != null",
                            "children": [
                                {
                                    "type": "invokeCode",
                                    "label": "true",
                                    "className": "io.toro.martini.JsonMethods",
                                    "methodName": "jsonStringToGloopObject",
                                    "parameters": [
                                        "java.lang.String"
                                    ],
                                    "inputs": [
                                        {
                                            "from": [
                                                "customField"
                                            ],
                                            "to": [
                                                "jsonString"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "type": "set",
                                            "expression": "200",
                                            "to": [
                                                "responseCode"
                                            ]
                                        },
                                        {
                                            "from": [
                                                "output"
                                            ],
                                            "to": [
                                                "response",
                                                "product",
                                                "customField"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "label": "$else",
                                    "lines": [
                                        {
                                            "type": "set",
                                            "expression": "200",
                                            "to": [
                                                "responseCode"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "Log the exception in the console, and then map the appropriate response message and code",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "response",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "$gloopException.message",
                            "evaluate": true,
                            "to": [
                                "response",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}