{
    "input": [
        {
            "name": "productCode"
        },
        {
            "name": "input",
            "type": "model",
            "gloopProperties": [
                {
                    "name": "quantity",
                    "type": "integer",
                    "comments": "The amout to increase, or decrease"
                },
                {
                    "name": "method",
                    "comments": "The update method to apply. Applicable values are INCREASE, or DECREASE",
                    "choices": [
                        "INCREASE",
                        "DECREASE"
                    ]
                }
            ]
        }
    ],
    "output": [
        {
            "name": "response",
            "type": "model",
            "reference": "io.toro.mock.product.model.Response",
            "gloopProperties": [
                {
                    "name": "product",
                    "type": "model",
                    "reference": "io.toro.mock.product.model.product.Product"
                }
            ]
        },
        {
            "name": "responseCode",
            "type": "integer"
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "name": "io.toro.mock.product.api.controller.product.GetProduct",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "getProductResponse",
                                    "type": "model",
                                    "gloopProperties": [
                                        {
                                            "name": "response",
                                            "type": "model",
                                            "reference": "io.toro.mock.product.model.Response",
                                            "allowExtraProperties": true,
                                            "gloopProperties": [
                                                {
                                                    "name": "product",
                                                    "type": "model",
                                                    "reference": "io.toro.mock.product.model.product.Product"
                                                }
                                            ]
                                        },
                                        {
                                            "name": "responseCode",
                                            "type": "integer"
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "inputs": [
                        {
                            "from": [
                                "productCode"
                            ],
                            "to": [
                                "productCode"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "responseCode"
                            ],
                            "to": [
                                "getProductResponse",
                                "responseCode"
                            ]
                        },
                        {
                            "from": [
                                "APIException"
                            ],
                            "to": [
                                "APIException"
                            ]
                        },
                        {
                            "from": [
                                "response"
                            ],
                            "to": [
                                "getProductResponse",
                                "response"
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "info",
                    "parameters": [
                        "java.lang.String"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "response.product.quantityInStock",
                            "evaluate": true,
                            "to": [
                                "message"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "getProductResponse.responseCode",
                    "children": [
                        {
                            "label": "$else",
                            "lines": [
                                {
                                    "from": [
                                        "APIException"
                                    ],
                                    "to": [
                                        "APIException"
                                    ]
                                },
                                {
                                    "from": [
                                        "getProductResponse",
                                        "responseCode"
                                    ],
                                    "to": [
                                        "responseCode"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "200",
                            "children": [
                                {
                                    "type": "fork",
                                    "expression": "input.quantity < 0",
                                    "children": [
                                        {
                                            "type": "invokeCode",
                                            "label": "true",
                                            "className": "io.toro.martini.LoggerMethods",
                                            "methodName": "error",
                                            "parameters": [
                                                "java.lang.String"
                                            ],
                                            "inputs": [
                                                {
                                                    "type": "set",
                                                    "expression": "Product quantity cannot be lower than 0",
                                                    "to": [
                                                        "message"
                                                    ]
                                                }
                                            ],
                                            "outputs": [
                                                {
                                                    "type": "set",
                                                    "expression": "400",
                                                    "to": [
                                                        "responseCode"
                                                    ]
                                                },
                                                {
                                                    "from": [
                                                        "output"
                                                    ],
                                                    "to": [
                                                        "APIException",
                                                        "message"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "400",
                                                    "to": [
                                                        "APIException",
                                                        "httpErrorCode"
                                                    ]
                                                },
                                                {
                                                    "type": "set",
                                                    "expression": "ERROR",
                                                    "to": [
                                                        "APIException",
                                                        "result"
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "block",
                                            "label": "false",
                                            "children": [
                                                {
                                                    "declare": [
                                                        {
                                                            "variables": [
                                                                {
                                                                    "name": "finalQuantity",
                                                                    "type": "integer"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "fork",
                                                    "expression": "input.method",
                                                    "children": [
                                                        {
                                                            "type": "block",
                                                            "label": "DECREASE",
                                                            "children": [
                                                                {
                                                                    "type": "fork",
                                                                    "expression": "getProductResponse.response.product.quantityInStock > input.quantity",
                                                                    "children": [
                                                                        {
                                                                            "label": "true",
                                                                            "comments": "trol",
                                                                            "lines": [
                                                                                {
                                                                                    "type": "set",
                                                                                    "expression": "getProductResponse.response.product.quantityInStock - input.quantity",
                                                                                    "evaluate": true,
                                                                                    "to": [
                                                                                        "finalQuantity"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "block",
                                                                            "label": "false",
                                                                            "children": [
                                                                                {
                                                                                    "lines": [
                                                                                        {
                                                                                            "type": "set",
                                                                                            "expression": "ERROR",
                                                                                            "to": [
                                                                                                "APIException",
                                                                                                "result"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "set",
                                                                                            "expression": "400",
                                                                                            "to": [
                                                                                                "APIException",
                                                                                                "httpErrorCode"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "set",
                                                                                            "expression": "The quantity to decrease must not be greater than the current quantity in stock",
                                                                                            "to": [
                                                                                                "APIException",
                                                                                                "message"
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "type": "set",
                                                                                            "expression": "400",
                                                                                            "to": [
                                                                                                "responseCode"
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "type": "break",
                                                                                    "expression": "$gloopService"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "label": "INCREASE",
                                                            "lines": [
                                                                {
                                                                    "type": "set",
                                                                    "expression": "getProductResponse.response.product.quantityInStock + input.quantity",
                                                                    "evaluate": true,
                                                                    "to": [
                                                                        "finalQuantity"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "invokeGloop",
                                                    "name": "io.toro.mock.product.sql.product.UpdateProductQuantity",
                                                    "declare": [
                                                        {
                                                            "variables": [
                                                                {
                                                                    "name": "updated",
                                                                    "type": "boolean"
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "inputs": [
                                                        {
                                                            "from": [
                                                                "productCode"
                                                            ],
                                                            "to": [
                                                                "updateProductQuantityInput",
                                                                "productCode"
                                                            ]
                                                        },
                                                        {
                                                            "from": [
                                                                "finalQuantity"
                                                            ],
                                                            "to": [
                                                                "updateProductQuantityInput",
                                                                "quantityInStock"
                                                            ]
                                                        }
                                                    ],
                                                    "outputs": [
                                                        {
                                                            "type": "set",
                                                            "expression": "200",
                                                            "to": [
                                                                "responseCode"
                                                            ]
                                                        },
                                                        {
                                                            "type": "set",
                                                            "expression": "$gloopOutput.updateCount > 0",
                                                            "evaluate": true,
                                                            "to": [
                                                                "updated"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "fork",
                                                    "expression": "updated",
                                                    "children": [
                                                        {
                                                            "label": "true",
                                                            "lines": [
                                                                {
                                                                    "from": [
                                                                        "getProductResponse",
                                                                        "response",
                                                                        "product"
                                                                    ],
                                                                    "to": [
                                                                        "response",
                                                                        "product"
                                                                    ]
                                                                },
                                                                {
                                                                    "from": [
                                                                        "finalQuantity"
                                                                    ],
                                                                    "to": [
                                                                        "response",
                                                                        "product",
                                                                        "quantityInStock"
                                                                    ],
                                                                    "priority": 1
                                                                },
                                                                {
                                                                    "type": "set",
                                                                    "expression": "SUCCESS",
                                                                    "to": [
                                                                        "response",
                                                                        "result"
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "set",
                                                                    "expression": "Successfully updated product stock.",
                                                                    "to": [
                                                                        "response",
                                                                        "message"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "label": "false",
                                                            "lines": [
                                                                {
                                                                    "type": "set",
                                                                    "expression": "400",
                                                                    "to": [
                                                                        "responseCode"
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "set",
                                                                    "expression": "ERROR",
                                                                    "to": [
                                                                        "APIException",
                                                                        "result"
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "set",
                                                                    "expression": "400",
                                                                    "to": [
                                                                        "APIException",
                                                                        "httpErrorCode"
                                                                    ]
                                                                },
                                                                {
                                                                    "type": "set",
                                                                    "expression": "Failed to update product stock. Check Martini Logs for more info.",
                                                                    "to": [
                                                                        "APIException",
                                                                        "message"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "comments": "Log the exception in the console, and then map the appropriate response message and code",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}