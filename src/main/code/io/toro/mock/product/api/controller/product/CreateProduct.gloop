{
    "input": [
        {
            "name": "product",
            "type": "model",
            "reference": "io.toro.mock.product.model.product.Product"
        },
        {
            "name": "$request",
            "type": "object"
        }
    ],
    "output": [
        {
            "name": "response",
            "type": "model",
            "reference": "io.toro.mock.product.model.Response",
            "gloopProperties": [
                {
                    "name": "product",
                    "type": "model",
                    "reference": "io.toro.mock.product.model.product.Product"
                }
            ]
        },
        {
            "name": "responseCode",
            "type": "integer"
        },
        {
            "name": "headers",
            "type": "model",
            "allowExtraProperties": true
        },
        {
            "name": "APIException",
            "type": "model",
            "reference": "io.toro.martini.api.APIException"
        }
    ],
    "steps": [
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeGloop",
                    "name": "io.toro.mock.product.sql.product.InsertProduct",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "productCreated",
                                    "type": "boolean"
                                }
                            ]
                        }
                    ],
                    "inputs": [
                        {
                            "from": [
                                "product",
                                "productCode"
                            ],
                            "to": [
                                "insertProductInput",
                                "productCode"
                            ]
                        },
                        {
                            "from": [
                                "product",
                                "productName"
                            ],
                            "to": [
                                "insertProductInput",
                                "productName"
                            ]
                        },
                        {
                            "from": [
                                "product",
                                "productLine"
                            ],
                            "to": [
                                "insertProductInput",
                                "productLine"
                            ]
                        },
                        {
                            "from": [
                                "product",
                                "productScale"
                            ],
                            "to": [
                                "insertProductInput",
                                "productScale"
                            ]
                        },
                        {
                            "from": [
                                "product",
                                "productVendor"
                            ],
                            "to": [
                                "insertProductInput",
                                "productVendor"
                            ]
                        },
                        {
                            "from": [
                                "product",
                                "productDescription"
                            ],
                            "to": [
                                "insertProductInput",
                                "productDescription"
                            ]
                        },
                        {
                            "from": [
                                "product",
                                "quantityInStock"
                            ],
                            "to": [
                                "insertProductInput",
                                "quantityInStock"
                            ]
                        },
                        {
                            "from": [
                                "product",
                                "buyPrice"
                            ],
                            "to": [
                                "insertProductInput",
                                "buyPrice"
                            ]
                        },
                        {
                            "from": [
                                "product",
                                "msrp"
                            ],
                            "to": [
                                "insertProductInput",
                                "msrp"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "product.customField?.isNullValue()? \"{}\": product.customField.asJson(false, false)",
                            "evaluate": true,
                            "to": [
                                "insertProductInput",
                                "customField"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "201",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "\"Successfully created product with product code: ${product.productCode}.\"",
                            "evaluate": true,
                            "to": [
                                "response",
                                "message"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Created",
                            "to": [
                                "response",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "$gloopOutput.updateCount > 0",
                            "evaluate": true,
                            "to": [
                                "productCreated"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "productCreated",
                    "children": [
                        {
                            "label": "true",
                            "lines": [
                                {
                                    "from": [
                                        "product",
                                        "productCode"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "productCode"
                                    ]
                                },
                                {
                                    "from": [
                                        "product",
                                        "productName"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "productName"
                                    ]
                                },
                                {
                                    "from": [
                                        "product",
                                        "productLine"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "productLine"
                                    ]
                                },
                                {
                                    "from": [
                                        "product",
                                        "productScale"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "productScale"
                                    ]
                                },
                                {
                                    "from": [
                                        "product",
                                        "productVendor"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "productVendor"
                                    ]
                                },
                                {
                                    "from": [
                                        "product",
                                        "productDescription"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "productDescription"
                                    ]
                                },
                                {
                                    "from": [
                                        "product",
                                        "quantityInStock"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "quantityInStock"
                                    ]
                                },
                                {
                                    "from": [
                                        "product",
                                        "buyPrice"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "buyPrice"
                                    ]
                                },
                                {
                                    "from": [
                                        "product",
                                        "msrp"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "msrp"
                                    ]
                                },
                                {
                                    "from": [
                                        "product",
                                        "customField"
                                    ],
                                    "to": [
                                        "response",
                                        "product",
                                        "customField"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "expression": "$request != null",
                    "children": [
                        {
                            "type": "block",
                            "label": "true",
                            "children": [
                                {
                                    "type": "invokeCode",
                                    "declare": [
                                        {
                                            "variables": [
                                                {
                                                    "name": "apiPrefix",
                                                    "comments": "The property value"
                                                }
                                            ]
                                        }
                                    ],
                                    "className": "io.toro.martini.GroovyMethods",
                                    "methodName": "getApplicationProperty",
                                    "parameters": [
                                        "java.lang.String"
                                    ],
                                    "inputs": [
                                        {
                                            "type": "set",
                                            "expression": "api.prefix",
                                            "to": [
                                                "key"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "from": [
                                                "output"
                                            ],
                                            "to": [
                                                "apiPrefix"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "invokeCode",
                                    "declare": [
                                        {
                                            "path": [
                                                "headers"
                                            ],
                                            "variables": [
                                                {
                                                    "name": "location"
                                                }
                                            ]
                                        }
                                    ],
                                    "unload": [
                                        [
                                            "apiPrefix"
                                        ]
                                    ],
                                    "className": "io.toro.martini.UrlMethods",
                                    "methodName": "getBaseUrl",
                                    "parameters": [
                                        "javax.servlet.http.HttpServletRequest"
                                    ],
                                    "inputs": [
                                        {
                                            "from": [
                                                "$request"
                                            ],
                                            "to": [
                                                "req"
                                            ]
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "type": "set",
                                            "expression": "\"${$gloopOutput.output}/${apiPrefix}/mock-product-api/products/${product.productCode}\"",
                                            "evaluate": true,
                                            "to": [
                                                "headers",
                                                "location"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String",
                        "java.lang.Throwable"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "realException"
                            ],
                            "to": [
                                "throwable"
                            ]
                        },
                        {
                            "from": [
                                "$gloopException",
                                "gloopStackTrace"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "responseCode"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "ERROR",
                            "to": [
                                "APIException",
                                "result"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Encountered an exception while processing the request.",
                            "to": [
                                "APIException",
                                "message"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "500",
                            "to": [
                                "APIException",
                                "httpErrorCode"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}